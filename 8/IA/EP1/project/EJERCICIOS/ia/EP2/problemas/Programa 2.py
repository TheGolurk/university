# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18wcbnqebJhp9NuOpv19hsUBajT06VmgK
"""

#Algoritmo genetico para la funcion de Rosenbrock
import numpy as np
import random as rnd
import math as mt

'''
Paso 1: Generar poblacion
Paso 2: Calcular fitnes
Paso 3: Ciclo reproductivo
Paso 3.1: Seleccion (Seleccion por torneo)
Paso 3.2: Cruza
Paso 3.3: Muta
Paso 3.4: Evaluacion
'''

def Poblacion():
  poblacion = np.zeros((6,5))
  for i in range(6):
    for j in range(5):
      x = -10+rnd.random()*20
      poblacion[i][j]=x
  
  return poblacion

def imprimir(poblacion):
  for i in poblacion:
    print(i)

def Fitness(poblacion):
  fitness = []
  for i in range (6): #recorrido de los individuos (filas)
    f=0
    for j in range (4): #recorrido de los genes (columnas)
      f = f + 100*(mt.pow(poblacion[i][j+1]-mt.pow(poblacion[i][j],2),2))
      +mt.pow((poblacion[i][j]-1),2)
    fitness.append(f)

  return(fitness)

def seleccionTorneo(poblacion,fitness):
  pobSeleccionada = []

  for i in range(6):

    ind1,ind2 = 0,0

    while(ind1==ind2):
      ind1=rnd.randint(0,5)
      ind2=rnd.randint(0,5)

    #competencia
    if fitness[ind1]<fitness[ind2]:
      pobSeleccionada.append(poblacion[ind1])
    else:
      pobSeleccionada.append(poblacion[ind2])
  
  return pobSeleccionada

def cruza(poblacion):
  poblacionCruzada=np.zeros((6,5))
  ind1,ind2,ind=0,0,0

  for i in range(3):
    ptoCruce = rnd.randint(0,4)

    while (ind1==ind2):
      ind1 = rnd.randint(0,5)
      ind2 = rnd.randint(0,5)

      for i in range(3):
        for index in range(5):
          if (index <= ptoCruce):
            poblacionCruzada[ind][index]=poblacion[ind1][index]
            poblacionCruzada[ind+1][index]=poblacion[ind2][index]
          else:
            poblacionCruzada[ind][index]=poblacion[ind2][index]
            poblacionCruzada[ind+1][index]=poblacion[ind1][index]
        ind+=2

  print(poblacionCruzada)


  return poblacionCruzada

def Muta(poblacion):
  poblacionMutada= np.zeros((6,5))
  individuo=[]

  for i in range(4):
    nuevoGen = -10+rnd.random()*20
    ptoMuta = rnd.randint(0,4)
    #print(ptoMuta)
    print(poblacion[i])

    for index,gen in enumerate(poblacion[i]):
      if (index==ptoMuta):
        #hacer el intercambio
        if (gen == "0"):
          individuo+= nuevoGen
        else:
          individuo+="0"
      else:
        individuo+=gen
      poblacionMutada.append(individuo)
    else:
      poblacionMutada.append(poblacion[i])
  #print(poblacionMutada)
  return poblacionMutada






if __name__=="__main__":
  poblacion=Poblacion()
  fitness=Fitness(poblacion)
  #ciclo reproductivo
  poblacion=seleccionTorneo(poblacion,fitness)
  cruza(poblacion)
  #imprimir(poblacion)